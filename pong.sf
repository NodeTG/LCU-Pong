Global Character cPlayer1;
Global Character cPlayer2;

WorldLevel testArea("SF_RESIDENTIAL_0822");

Bool gameStarted(false);
Bool gridSetup(false);

Number WIDTH(35);
Number HEIGHT(20);

// Paddle 1 Initial Position
Number paddle1_x(0);
Number paddle1_y(2);

// Paddle 2 Initial Position
Number paddle2_x(WIDTH - 1);
Number paddle2_y(HEIGHT - 4 - 2);

// Ball Initial Position and Velocity
Number ball_x(18);
Number ball_y(10);
Number ball_x_vel(1);
Number ball_y_vel(1);

// Active Studs
Text p1_index1("");
Text p1_index2("");
Text p1_index3("");
Text p1_index4("");

Text p2_index1("");
Text p2_index2("");
Text p2_index3("");
Text p2_index4("");

Text ball_index1("");
//Text ball_index2("");
//Text ball_index3("");
//Text ball_index4("");

// Initial Setup - Clearing the Grid
State Base()
{
	Actions
	{
        paddle2_y = RandomInt(0, HEIGHT - 4);
		setupGrid();
        goto GameReady();
	};
};

Function setupGrid()
{
	Number i(0);

	while ( i <= 699 )
	{
        Text studText("stud_");
        Text studText2("stud2_");
        studText = studText + i.ToText("int 1");
        studText2 = studText2 + i.ToText("int 1");

        Gizmo tempStud(studText, testArea);
        tempStud.SetVisible(false);
        Gizmo tempStud2(studText2, testArea);
        tempStud2.SetVisible(false);
        i = i + 1;
	};

	gridSetup = true;
}

// Waits for player to activate the game.
State GameReady()
{
    Conditions
	{
		if (PlayerPressedButton("L3") && gridSetup)
		{
            gameStarted = true;
            cPlayer1.SetAiOverride(true);
            cPlayer1.LockInPlace(true, "idle");

            // UI enabled by default due to score UI - can press R3 to toggle it
            //UI_ShowHUD(false);
            //UI_ShowPlayerHUD(false);

            goto GamePlay();
		};
	};
};

// Handles game logic and input/output
State GamePlay()
{
    Bool uiShown(true);
    Actions
    {  
        DrawScreen();
        wait(1.5);
        while (gameStarted)
        {
            if (PlayerHeldButton("DOWN"))
            {
                paddle1_y = paddle1_y + 2;

                if (paddle1_y + 4 > HEIGHT)
                {
                    paddle1_y = HEIGHT - 4;
                }

                DrawPaddle1();
            };

            if (PlayerHeldButton("UP"))
            {
                paddle1_y = paddle1_y - 2;

                if (paddle1_y < 0)
                {
                    paddle1_y = 0;
                }

                DrawPaddle1();
            };

            if (PlayerHeldButton("B"))
            {
                cPlayer1.SetAiOverride(false);
                cPlayer1.LockInPlace(false, "idle"); 
                UI_ShowHUD(true);
                UI_ShowPlayerHUD(true);
                gameStarted = false;
            };

            if (PlayerHeldButton("R3"))
            {
                uiShown = !uiShown;
                UI_ShowHUD(uiShown);
                UI_ShowPlayerHUD(uiShown);
                wait(0.2);
            };

            if (paddle2_y < ball_y)
            {
                paddle2_y = paddle2_y + 2;

                if (paddle2_y + 4 > HEIGHT)
                {
                    paddle2_y = HEIGHT - 4;
                }

                DrawPaddle2();
            }
            elseif (paddle2_y > ball_y)
            {
                paddle2_y = paddle2_y - 2;

                if (paddle2_y < 0)
                {
                    paddle2_y = 0;
                }

                DrawPaddle2();
            }

            if ( ball_x + ball_x_vel > WIDTH )
            {
                // Player 1 scores (paddle 2 misses)
                ball_x = 18;
                ball_y = 10;
                ball_x_vel = -1; // Move ball towards the player who just scored, rather than the one that just missed
                ball_y_vel = 1;
                DrawBall();
                UI_SetMissionMessage("PONG_P1_SCORE", 3.5);
                wait(3);
            }
            elseif ( ball_x + ball_x_vel < 0 )
            {
                // Player 2 scores (paddle 1 misses)
                ball_x = 18;
                ball_y = 10;
                ball_x_vel = 1;
                ball_y_vel = 1;
                DrawBall();
                UI_SetMissionMessage("PONG_P2_SCORE", 3.5);
                wait(3);
            }
            else
            {
                ball_x = ball_x + ball_x_vel;
            }

            if ( ball_y + ball_y_vel >= HEIGHT )
            {
                ball_y_vel = ball_y_vel * -1;
                ball_y = HEIGHT - 1;
            }
            elseif ( ball_y + ball_y_vel <= 0 )
            {
                ball_y_vel = ball_y_vel * -1;
                ball_y = 0;
            }
            else
            {
                ball_y = ball_y + ball_y_vel;
            }

            Text ballText("stud_");
            Number ballNum;
            ballNum = (ball_y * WIDTH) + ball_x;
            ballText = ballText + ballNum.ToText("int 1");
            
            if ( ballText == p1_index1 || ballText == p1_index2 || ballText == p1_index3 || ballText == p1_index4 ) // Hit P1 Paddle
            {
                ball_x_vel = ball_x_vel * -1;
                ball_x = 1;
            
            }
            elseif ( ballText == p2_index1 || ballText == p2_index2 || ballText == p2_index3 || ballText == p2_index4 ) // Hit P2 Paddle
            {
                ball_x_vel = ball_x_vel * -1;
                ball_x = WIDTH - 1;
            }

            DrawBall();
            wait(1.0 / 30.0);
        };

        goto GameReady();
    };
};

Function DrawPaddle1()
{
    Text studText("stud_");
    Text temp1;
    Number tempNum1;
    Text temp2;
    Number tempNum2;
    Text temp3;
    Number tempNum3;
    Text temp4;
    Number tempNum4;
    Number i(0);

    Gizmo tempGiz1(p1_index1, testArea);
    tempGiz1.SetVisible(false);
    Gizmo tempGiz2(p1_index2, testArea);
    tempGiz2.SetVisible(false);
    Gizmo tempGiz3(p1_index3, testArea);
    tempGiz3.SetVisible(false);
    Gizmo tempGiz4(p1_index4, testArea);
    tempGiz4.SetVisible(false);

    tempNum1 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp1 = studText + tempNum1.ToText("int 1");
    Gizmo tempGiz1(temp1, testArea);
    tempGiz1.SetVisible(true);

    i = i + 1;

    tempNum2 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp2 = studText + tempNum2.ToText("int 1");
    Gizmo tempGiz2(temp2, testArea);
    tempGiz2.SetVisible(true);

    i = i + 1;

    tempNum3 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp3 = studText + tempNum3.ToText("int 1");
    Gizmo tempGiz3(temp3, testArea);
    tempGiz3.SetVisible(true);

    i = i + 1;

    tempNum4 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp4 = studText + tempNum4.ToText("int 1");
    Gizmo tempGiz4(temp4, testArea);
    tempGiz4.SetVisible(true);

    p1_index1 = temp1;
    p1_index2 = temp2;
    p1_index3 = temp3;
    p1_index4 = temp4;
}

Function DrawPaddle2()
{
    Text studText("stud_");
    Text temp1;
    Number tempNum1;
    Text temp2;
    Number tempNum2;
    Text temp3;
    Number tempNum3;
    Text temp4;
    Number tempNum4;
    Number i(0);

    Gizmo tempGiz1(p2_index1, testArea);
    tempGiz1.SetVisible(false);
    Gizmo tempGiz2(p2_index2, testArea);
    tempGiz2.SetVisible(false);
    Gizmo tempGiz3(p2_index3, testArea);
    tempGiz3.SetVisible(false);
    Gizmo tempGiz4(p2_index4, testArea);
    tempGiz4.SetVisible(false);

    tempNum1 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp1 = studText + tempNum1.ToText("int 1");
    Gizmo tempGiz1(temp1, testArea);
    tempGiz1.SetVisible(true);

    i = i + 1;

    tempNum2 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp2 = studText + tempNum2.ToText("int 1");
    Gizmo tempGiz2(temp2, testArea);
    tempGiz2.SetVisible(true);

    i = i + 1;

    tempNum3 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp3 = studText + tempNum3.ToText("int 1");
    Gizmo tempGiz3(temp3, testArea);
    tempGiz3.SetVisible(true);

    i = i + 1;

    tempNum4 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp4 = studText + tempNum4.ToText("int 1");
    Gizmo tempGiz4(temp4, testArea);
    tempGiz4.SetVisible(true);

    p2_index1 = temp1;
    p2_index2 = temp2;
    p2_index3 = temp3;
    p2_index4 = temp4;
}

Function DrawBall()
{
    Text studText("stud2_");
    Text temp;
    Number tempNum;
    Number i(0);

    Gizmo tempGiz9(ball_index1, testArea);
    tempGiz9.SetVisible(false);

    tempNum = ((ball_y + i) * WIDTH) + ball_x;
    temp = studText + tempNum.ToText("int 1");
    Gizmo tempGiz(temp, testArea);
    tempGiz.SetVisible(true);
    ball_index1 = temp;
}

Function DrawScreen()
{
    DrawPaddle1();
    DrawPaddle2();
    DrawBall();
}

Base();