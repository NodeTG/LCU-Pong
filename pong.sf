Global Character cPlayer1;
Global Character cPlayer2;

WorldLevel testArea("SF_RESIDENTIAL_0822");

Position policeStation(-180.4138031, 4.560653925, -221.7855225);
Position pongBoard(94.58107758, 17.83602333, 299.4021301);
Number policeRot(1.562838793 / 0.00009587380104);
Number pongRot(0.6630632281 / 0.00009587380104);

Bool gameStarted(false);
Bool gridSetup(false);

Number p1_score(0);
Number p2_score(0);

Number WIDTH(35);
Number HEIGHT(20);

// Paddle 1 Initial Position
Number paddle1_x(0);
Number paddle1_y(2);

// Paddle 2 Initial Position
Number paddle2_x(WIDTH - 1);
Number paddle2_y(15);

// Ball Initial Position and Velocity
Number ball_x(18);
Number ball_y(10);
Number ball_x_vel(1);
Number ball_y_vel(1);

// Active Studs
Text p1_index1("");
Text p1_index2("");
Text p1_index3("");
Text p1_index4("");

Text p2_index1("");
Text p2_index2("");
Text p2_index3("");
Text p2_index4("");

Text ball_index1("");
//Text ball_index2("");
//Text ball_index3("");
//Text ball_index4("");

// Initial Setup - Clearing the Grid
State Base()
{
	Actions
	{
        testArea.ForceLoad(true);
		setupGrid();
        goto GameReady();
	};
};

Function setupGrid()
{
	Number i(0);

	while ( i <= 699 )
	{
        Text studText("stud_");
        Text studText2("stud2_");
        studText = studText + i.ToText("int 1");
        studText2 = studText2 + i.ToText("int 1");
        
        if ( PlayerHeldButton("L3") ) { UI_SetMissionMessage("PONG_NOT_READY", 4); };

        Gizmo tempStud(studText, testArea);
        tempStud.SetVisible(false);
        Gizmo tempStud2(studText2, testArea);
        tempStud2.SetVisible(false);
        i = i + 1;
	};

	gridSetup = true;
}

// Waits for player to activate the game.
State GameReady()
{
    Number distance1;
    Number distance2;
    Conditions
	{
        distance1 = cPlayer1.DistanceToXZ(pongBoard);
        distance2 = cPlayer1.DistanceToXZ(policeStation);

		if ( PlayerPressedButton("L3") && distance1 < 7.5 )
		{
            gameStarted = true;
            cPlayer1.SetAiOverride(true);
            cPlayer1.LockInPlace(true, "idle");

            if (cPlayer2)
            {
                cPlayer2.SetAiOverride(true);
                cPlayer2.LockInPlace(true, "idle");
            }

            // UI enabled by default due to score UI - can press R3 to toggle it
            //UI_ShowHUD(false);
            //UI_ShowPlayerHUD(false);

            UI_SetMissionDamageBarText("PONG_UI_MSG");
            UI_SetMissionDamageBar ( 5 + p1_score - p2_score, 10 );
            UI_ShowMissionDamageBar(true);

            goto GamePlay();
		};

        if ( PlayerPressedButton("R3") && distance1 < 7.5 )
        {
            cPlayer1.SetAiOverride(true);
            cPlayer1.LockInPlace(true, "idle");
            FadeScreen(true);
            wait(1.5);
            cPlayer1.Teleport(policeStation, policeRot);
            wait(1.0);
            FadeScreen(false);
            SnapCameraToDir(1, "Rear");
            cPlayer1.SetAiOverride(false);
            cPlayer1.LockInPlace(false, "idle");
        };

        if ( PlayerPressedButton("L3") && distance2 < 7.5 )
        {
            cPlayer1.SetAiOverride(true);
            cPlayer1.LockInPlace(true, "idle");
            FadeScreen(true);
            wait(1.5);
            cPlayer1.Teleport(pongBoard, pongRot);
            wait(1.0);
            FadeScreen(false);
            SnapCameraToDir(1, "Front");
            cPlayer1.SetAiOverride(false);
            cPlayer1.LockInPlace(false, "idle");
        };
	};
};

// Handles game logic and input/output
State GamePlay()
{
    Bool uiShown(true);
    Actions
    {  
        DrawScreen();
        UI_ShowMissionDamageBar(true);
        wait(1.5);
        UI_ShowMissionDamageBar(false);
        wait(1);
        while (gameStarted)
        {
            if (PlayerHeldButton("DOWN"))
            {
                paddle1_y = paddle1_y + 2;

                if (paddle1_y + 4 > HEIGHT)
                {
                    paddle1_y = HEIGHT - 4;
                }

                DrawPaddle1();
            };

            if (PlayerHeldButton("UP"))
            {
                paddle1_y = paddle1_y - 2;

                if (paddle1_y < 0)
                {
                    paddle1_y = 0;
                }

                DrawPaddle1();
            };

            if (PlayerHeldButton("B"))
            {
                cPlayer1.SetAiOverride(false);
                cPlayer1.LockInPlace(false, "idle"); 

                if (cPlayer2)
                {
                    cPlayer2.SetAiOverride(false);
                    cPlayer2.LockInPlace(false, "idle");
                }

                UI_ShowHUD(true);
                UI_ShowPlayerHUD(true);
                UI_ShowMissionDamageBar(false);
                gameStarted = false;
            };

            if (PlayerHeldButton("R3"))
            {
                uiShown = !uiShown;
                UI_ShowHUD(uiShown);
                UI_ShowPlayerHUD(uiShown);
                wait(0.2);
            };

            if (!cPlayer2)
            {
                Number random;
                random = RandomInt(0,10);
                if (random != 3 && random != 4 && random != 5 && random != 6 && random != 7) // make the AI stutter randomly to hinder its performance
                {
                    if (paddle2_y < ball_y)
                    {
                        paddle2_y = paddle2_y + 2;

                        if (paddle2_y + 4 > HEIGHT)
                        {
                            paddle2_y = HEIGHT - 4;
                        }

                        DrawPaddle2();
                    }
                    elseif (paddle2_y > ball_y)
                    {
                        paddle2_y = paddle2_y - 2;

                        if (paddle2_y < 0)
                        {
                            paddle2_y = 0;
                        }

                        DrawPaddle2();
                    }
                }
            }
            else
            {
                cPlayer2.SetAiOverride(true); // In case P2 drops in/out multiple times during a game, lock them in place every frame that they exist
                cPlayer2.LockInPlace(true, "idle");

                if (PlayerHeldButton("A"))
                {
                    paddle2_y = paddle2_y + 2;

                    if (paddle2_y + 4 > HEIGHT)
                    {
                        paddle2_y = HEIGHT - 4;
                    }

                    DrawPaddle2();
                };

                if (PlayerHeldButton("Y"))
                {
                    paddle2_y = paddle2_y - 2;

                    if (paddle2_y < 0)
                    {
                        paddle2_y = 0;
                    }

                    DrawPaddle2();
                };
            }

            if ( ball_x + ball_x_vel > WIDTH && ball_x != paddle2_x && ball_x != paddle2_x + 1)
            {
                // Player 1 scores (paddle 2 misses)

                ball_x = 18;
                ball_y = 10;
                ball_x_vel = -1; // Move ball towards the player who just scored, rather than the one that just missed
                ball_y_vel = 1;

                DrawBall();

                UI_SetMissionMessage("PONG_P1_SCORE", 3.5);
                p1_score = p1_score + 1;

                UI_SetMissionDamageBar ( 5 + p1_score - p2_score, 10 );
                UI_ShowMissionDamageBar(true);
                PlaySFX(sfx="UI_CodeBreak_CheatUnlocked");

                wait(3);
                UI_ShowMissionDamageBar(false);
                wait(1);

                if (5 + p1_score - p2_score >= 10) { UI_SetMissionMessage("PONG_P1_WIN", 5); PlaySFX("Trial_Start_01"); wait(6); p1_score = 0; p2_score = 0; };
            }
            elseif ( ball_x + ball_x_vel < 0 )
            {
                // Player 2 scores (paddle 1 misses)

                ball_x = 18;
                ball_y = 10;
                ball_x_vel = 1;
                ball_y_vel = 1;

                DrawBall();

                UI_SetMissionMessage("PONG_P2_SCORE", 3.5);
                p2_score = p2_score + 1;

                UI_SetMissionDamageBar ( 5 + p1_score - p2_score, 10 );
                UI_ShowMissionDamageBar(true);
                PlaySFX(sfx="UI_CodeBreak_CheatUnlocked");

                wait(3);
                UI_ShowMissionDamageBar(false);
                wait(1);

                if (5 + p1_score - p2_score <= 0) { UI_SetMissionMessage("PONG_P2_WIN", 5); PlaySFX("Trial_Start_01"); wait(6); p1_score = 0; p2_score = 0; };
            }
            else
            {
                ball_x = ball_x + ball_x_vel;
            }

            if ( ball_y + ball_y_vel >= HEIGHT )
            {
                ball_y_vel = ball_y_vel * -1;
                ball_y = HEIGHT - 1;
            }
            elseif ( ball_y + ball_y_vel <= 0 )
            {
                ball_y_vel = ball_y_vel * -1;
                ball_y = 0;
            }
            else
            {
                ball_y = ball_y + ball_y_vel;
            }

            Text ballText("stud_");
            Number ballNum;
            ballNum = (ball_y * WIDTH) + ball_x;
            ballText = ballText + ballNum.ToText("int 1");
            
            if ( ballText == p1_index1 || ballText == p1_index2 || ballText == p1_index3 || ballText == p1_index4 ) // Hit P1 Paddle
            {
                ball_x_vel = ball_x_vel * -1;
                ball_x = 1;
                PlaySFX(sfx="UI_CodeBreak_LetterDown");
            
            }
            elseif ( ballText == p2_index1 || ballText == p2_index2 || ballText == p2_index3 || ballText == p2_index4 ) // Hit P2 Paddle
            {
                ball_x_vel = ball_x_vel * -1;
                ball_x = WIDTH - 1;
                PlaySFX(sfx="UI_CodeBreak_LetterUp");
            }

            DrawBall();
            wait(1.0 / 30.0);
        };

        goto GameReady();
    };
};

Function DrawPaddle1()
{
    Text studText("stud_");
    Text temp1;
    Number tempNum1;
    Text temp2;
    Number tempNum2;
    Text temp3;
    Number tempNum3;
    Text temp4;
    Number tempNum4;
    Number i(0);

    Gizmo tempGiz1(p1_index1, testArea);
    tempGiz1.SetVisible(false);
    Gizmo tempGiz2(p1_index2, testArea);
    tempGiz2.SetVisible(false);
    Gizmo tempGiz3(p1_index3, testArea);
    tempGiz3.SetVisible(false);
    Gizmo tempGiz4(p1_index4, testArea);
    tempGiz4.SetVisible(false);

    tempNum1 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp1 = studText + tempNum1.ToText("int 1");
    Gizmo tempGiz1(temp1, testArea);
    tempGiz1.SetVisible(true);

    i = i + 1;

    tempNum2 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp2 = studText + tempNum2.ToText("int 1");
    Gizmo tempGiz2(temp2, testArea);
    tempGiz2.SetVisible(true);

    i = i + 1;

    tempNum3 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp3 = studText + tempNum3.ToText("int 1");
    Gizmo tempGiz3(temp3, testArea);
    tempGiz3.SetVisible(true);

    i = i + 1;

    tempNum4 = ((paddle1_y + i) * WIDTH) + paddle1_x;
    temp4 = studText + tempNum4.ToText("int 1");
    Gizmo tempGiz4(temp4, testArea);
    tempGiz4.SetVisible(true);

    p1_index1 = temp1;
    p1_index2 = temp2;
    p1_index3 = temp3;
    p1_index4 = temp4;
}

Function DrawPaddle2()
{
    Text studText("stud_");
    Text temp1;
    Number tempNum1;
    Text temp2;
    Number tempNum2;
    Text temp3;
    Number tempNum3;
    Text temp4;
    Number tempNum4;
    Number i(0);

    Gizmo tempGiz1(p2_index1, testArea);
    tempGiz1.SetVisible(false);
    Gizmo tempGiz2(p2_index2, testArea);
    tempGiz2.SetVisible(false);
    Gizmo tempGiz3(p2_index3, testArea);
    tempGiz3.SetVisible(false);
    Gizmo tempGiz4(p2_index4, testArea);
    tempGiz4.SetVisible(false);

    tempNum1 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp1 = studText + tempNum1.ToText("int 1");
    Gizmo tempGiz1(temp1, testArea);
    tempGiz1.SetVisible(true);

    i = i + 1;

    tempNum2 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp2 = studText + tempNum2.ToText("int 1");
    Gizmo tempGiz2(temp2, testArea);
    tempGiz2.SetVisible(true);

    i = i + 1;

    tempNum3 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp3 = studText + tempNum3.ToText("int 1");
    Gizmo tempGiz3(temp3, testArea);
    tempGiz3.SetVisible(true);

    i = i + 1;

    tempNum4 = ((paddle2_y + i) * WIDTH) + paddle2_x;
    temp4 = studText + tempNum4.ToText("int 1");
    Gizmo tempGiz4(temp4, testArea);
    tempGiz4.SetVisible(true);

    p2_index1 = temp1;
    p2_index2 = temp2;
    p2_index3 = temp3;
    p2_index4 = temp4;
}

Function DrawBall()
{
    Text studText("stud2_");
    Text temp;
    Number tempNum;
    Number i(0);

    Gizmo tempGiz9(ball_index1, testArea);
    tempGiz9.SetVisible(false);

    tempNum = ((ball_y + i) * WIDTH) + ball_x;
    temp = studText + tempNum.ToText("int 1");
    Gizmo tempGiz(temp, testArea);
    tempGiz.SetVisible(true);
    ball_index1 = temp;
}

Function DrawScreen()
{
    DrawPaddle1();
    DrawPaddle2();
    DrawBall();
}

Base();